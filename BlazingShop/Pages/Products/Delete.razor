@page "/products/delete/{id:int}"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext _context
@inject NavigationManager _navigationManager

<h1>Delete @_model?.Title?</h1>

<EditForm Model="_model" OnValidSubmit="@HandleSubmitAsync">

    @* 
        Todas as validaçoes informadas no model serão feitas
        para mostrar esses erros utilizar essas tags abaixo
     *@
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        @* Fazendo o binding da propriedade Title do modelo passado (Product) *@
        <InputText readonly class="form-control" type="text" id="title" @bind-Value="_model.Title" />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        @* Fazendo o binding da propriedade Price do modelo passado (Product) *@
        <InputNumber readonly class="form-control" type="number" id="Price" @bind-Value="_model.Price" />
    </div>

    @if(!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @_errorMessage
        </div>
    }

    <button class="btn btn-danger" type="submit">
        DELETE
    </button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private Product? _model = new();
    private string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {

        _model = await _context
            .Products
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.Id == Id);
    }

    async Task HandleSubmitAsync()
    {
        try 
        {
            var prod = await _context.Products.FirstOrDefaultAsync(x => x.Id == Id);

            if (prod == null)
                throw new Exception("Produto não encontrado");

            _context.Products.Remove(prod);
            await _context.SaveChangesAsync();

            _navigationManager.NavigateTo("/products");
        }
        catch
        {
            _errorMessage = "Falha ao excluir produto";
        }
    }
}